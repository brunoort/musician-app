{"ast":null,"code":"'use strict';\n\nvar console = global.console;\n\nmodule.exports = function () {\n  /**\n   * Color definitions\n   * @type {string}\n   */\n  var red = \"\\x1B[31m\",\n      blue = \"\\x1B[34m\",\n      yellow = '\\x1B[33m',\n      magenta = '\\x1B[35m',\n      reset = \"\\x1B[0m\";\n  /**\n   * Composes a colorful message (label is colorful)\n   * @param {string} color\n   * @param {string} label\n   * @param {object|string} message\n   * @returns {string}\n   */\n\n  function composeColoredMessage(color, label, message) {\n    if (typeof message !== 'string') {\n      message = JSON.stringify(message);\n    }\n\n    return color + label + ': ' + reset + message;\n  }\n\n  return {\n    /**\n     * Logs an error to the node console\n     * @param {object|string} message\n     */\n    error: function error(message) {\n      console.error(composeColoredMessage(red, 'Error', message));\n    },\n\n    /**\n     * Logs info log to the node console\n     * @param {object|string} message\n     */\n    info: function info(message) {\n      console.info(composeColoredMessage(blue, 'Info', message));\n    },\n\n    /**\n     * Logs debug to the node console\n     * @param {object|string} message\n     */\n    debug: function debug(message) {\n      console.log(composeColoredMessage(magenta, 'Debug', message));\n    },\n\n    /**\n     * Logs warning to the node console\n     * @param {object|string} message\n     */\n    warning: function warning(message) {\n      console.warn(composeColoredMessage(yellow, 'Warning', message));\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}