{"ast":null,"code":"'use strict';\n/**\n * Return the MongoTransporter generator\n * @param {Object} mongooseInstance\n * @param {String} cacheCollection\n * @returns {{get: function, set: function, purge: function}}\n */\n\nmodule.exports = function (mongooseInstance, cacheCollection) {\n  if (!mongooseInstance) {\n    throw new Error('Cannot init requestify mongo transporter without mongoose instance');\n  }\n  /**\n   * mongoose instance\n   * @type {Object}\n   */\n\n\n  var mongoose = mongooseInstance;\n  /**\n   * Cache collection\n   * @type {string}\n   */\n\n  var cacheCollection = cacheCollection || 'requestifyresponses';\n  /**\n   * Cache schema\n   * @type {mongoose.Schema}\n   */\n\n  var cacheSchema = new mongoose.Schema({\n    _id: {\n      type: String\n    },\n    response: {\n      type: {\n        code: Number,\n        body: String,\n        headers: Object\n      }\n    }\n  });\n  /**\n   * Cache model\n   * @type {mongoose.Model}\n   */\n\n  var RequestifyResponse = mongoose.model('RequestifyResponse', cacheSchema, cacheCollection);\n  return {\n    /**\n     * @implements Cache.get\n     * @param {string} url\n     * @param {Function} callback\n     */\n    get: function get(url, callback) {\n      RequestifyResponse.findById(url, function (err, result) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, result.response);\n      });\n    },\n\n    /**\n     * @implements Cache.set\n     * @param {string} url\n     * @param {string} response\n     * @param {Function} callback\n     */\n    set: function set(url, response, callback) {\n      var requestifyResponse = {\n        _id: url,\n        response: response\n      };\n      RequestifyResponse.create(requestifyResponse, callback);\n      return requestifyResponse;\n    },\n\n    /**\n     * @implements Cache.purge\n     * @param {string} url\n     * @param {Function} callback\n     */\n    purge: function purge(url, callback) {\n      RequestifyResponse.findByIdAndRemove(url, callback);\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}