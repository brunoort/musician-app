{"ast":null,"code":"'use strict';\n\nvar url = require('url'),\n    queryString = require('querystring'),\n    _ = require('underscore'),\n    $ = require('jquery');\n/**\n * Constructor to the Response object\n * @param {number} code - HTTP response code\n * @param {object} headers - Key value pairs of response headers\n * @param {string} body\n * @constructor\n */\n\n\nfunction Response(code, headers, body) {\n  this.code = code;\n  this.headers = headers;\n  this.body = body || '';\n}\n/**\n * Sets one response body chunk to the response body\n * @param {string} chunk\n * @returns {Response}\n */\n\n\nResponse.prototype.setChunk = function (chunk) {\n  this.body += chunk;\n  return this;\n};\n/**\n * Returns the decoded || raw string of the request\n * @returns {string|object}\n */\n\n\nResponse.prototype.getBody = function () {\n  var responseType = this.getHeader('content-type');\n\n  if (!responseType) {\n    return this.body;\n  }\n\n  if (responseType.indexOf('application/json') !== -1 && _.isString(this.body)) {\n    try {\n      return JSON.parse(this.body);\n    } catch (error) {\n      console.log('Failed parsing expected JSON response, returned raw response');\n      return this.body;\n    }\n  }\n\n  if (responseType.indexOf('application/x-www-form-urlencoded') !== -1) {\n    return queryString.parse(this.body);\n  }\n\n  if (responseType.indexOf('xml') !== -1) {\n    return $(this.body);\n  }\n\n  return this.body;\n};\n/**\n * Returns the request HTTP code\n * @returns {number}\n */\n\n\nResponse.prototype.getCode = function () {\n  return this.code;\n};\n/**\n * Returns one header value by key\n * @param headerKey\n * @returns {string}\n */\n\n\nResponse.prototype.getHeader = function (headerKey) {\n  headerKey = headerKey || '';\n\n  if (!this.headers[headerKey]) {\n    return null;\n  }\n\n  return this.headers[headerKey];\n};\n/**\n * Returns the full headers object\n * @returns {object}\n */\n\n\nResponse.prototype.getHeaders = function () {\n  return this.headers;\n};\n\nmodule.exports = Response;","map":null,"metadata":{},"sourceType":"script"}